---
- name: "Common Setup"
  hosts: "all"
  gather_facts: false

  tasks:

    - name: "Install dependencies"
      become: true
      ansible.builtin.apt:
        pkg:
          - "aria2"
          - "bat"
          - "curl"
          - "fd-find"
          - "kitty-terminfo"
          - "moreutils"
          - "python3.10"
          - "python3.10-venv"
          - "silversearcher-ag"
          - "stow"
          - "tar"
          - "tree"
          - "wget"
        state: "present"
        update_cache: true
        install_recommends: false
        lock_timeout: 300
        cache_valid_time: 3600

    - name: "Setup dotfiles (if necessary)"
      ansible.builtin.script: "setup_dotfiles.sh"
      args:
        creates: "/home/azuser/.dotfiles"

    - name: "Setup SSH (if necessary)"
      register: "result"
      retries: 10
      delay: 2
      until: result is not failed
      ansible.builtin.script: "setup_ssh.sh"
      args:
        creates: "/home/azuser/.ssh/id_rsa"

    - name: "Setup /mnt"
      become: true
      ansible.builtin.file:
        path: "/mnt"
        owner: "azuser"
        group: "azuser"

    - name: "Use /mnt/pip_cache as the cache for pip"
      ansible.builtin.shell: |
        mkdir -p /mnt/cache/pip;
        mkdir -p /home/azuser/.config/pip;
        touch    /home/azuser/.config/pip/pip.conf;
        echo '[global]' >> /home/azuser/.config/pip/pip.conf;
        echo 'cache-dir=/mnt/cache/pip' >> /home/azuser/.config/pip/pip.conf;
      args:
        creates: "/home/azuser/.config/pip/pip.conf"

    - name: "Ensure that MAMBA_ROOT_PREFIX points to /mnt/micromamba"
      ansible.builtin.lineinfile:
        path: "/home/azuser/.bashrc"
        line: "export MAMBA_ROOT_PREFIX=/mnt/micromamba"

    - name: "Setup mamba (if necessary)"
      ansible.builtin.shell: |
        curl -Ls https://micro.mamba.pm/api/micromamba/linux-64/latest | tar -xvj -C ~/.local/bin/ --strip-components=1 bin/micromamba
      args:
        creates: "/home/azuser/.local/bin/micromamba"

    - name: "Setup pipx (if necessary)"
      ansible.builtin.script: "setup_pipx.sh"
      args:
        creates: "/home/azuser/.local/bin/pipx"

    - name: "Setup ntfy (if necessary)"
      ansible.builtin.script: "setup_ntfy.sh"
      ignore_errors: true
      args:
        creates: "/home/azuser/.local/bin/ntfy"

    - name: "Login to azcopy"
      ansible.builtin.command: "azcopy login --identity"
