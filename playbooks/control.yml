---
- name: "Setup Control VM"
  hosts: "all"
  gather_facts: false

  tasks:

    - name: "Install dependencies"
      become: true
      ansible.builtin.apt:
        pkg:
          - "nfs-common"
        state: "present"
        update_cache: true
        install_recommends: false
        lock_timeout: 60
        cache_valid_time: 3600

    - name: "Gather selected facts"
      ansible.builtin.setup:
        filter:
          - 'ansible_date_time'

    - name: "Install azure-cli"
      become: true
      ansible.builtin.script: "setup_azure_cli.sh"
      args:
        creates: "/usr/bin/az"

    - name: "azure-cli login"
      ansible.builtin.command: "az login --identity"

    - name: "Setup jaz (if necessary)"
      ansible.builtin.script: "setup_jaz.sh"
      args:
        creates: "/home/azuser/.local/bin/jaz"

    - name: "git clone provisioning (if necessary)"
      ansible.builtin.git:
        repo: "http://github.com/azpos/provisioning"
        dest: "/home/azuser/provisioning"
        clone: true
        update: true

    - name: "Setup poetry (if necessary)"
      become: false
      ansible.builtin.shell: |
        python3.9 -m pipx install poetry
        python3.9 -m pipx inject poetry poetry-dynamic-versioning
      args:
        creates: "/home/azuser/.local/bin/poetry"

    - name: "Create /scratch/shared"
      become: true
      ansible.builtin.file:
        path: "/scratch/shared"
        state: "directory"
        mode: "0755"
        owner: "azuser"
        group: "azuser"

    - name: "Mount NFS volume"
      become: true
      ignore_errors: true
      ansible.posix.mount:
        src: "{{ hostvars[inventory_hostname]['groups']['master'][0] }}:/scratch/shared"
        path: "/scratch/shared"
        opts: "rw,sync,hard"
        state: "mounted"
        fstype: "nfs"

    - name: "Send notification"
      ansible.builtin.command: "/home/azuser/.local/bin/ntfy send 'Provisioning of CONTROL finished: {{ now(utc=True) }}'"
